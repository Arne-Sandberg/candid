// The code in this file was automatically generated by running
// 	httprequest-generate-client github.com/CanonicalLtd/blues-identity/internal/v1 apiHandler client
// DO NOT EDIT

package idmclient

import (
	"github.com/CanonicalLtd/blues-identity/params"
	"github.com/juju/httprequest"
	"gopkg.in/macaroon.v1"
)

type client struct {
	Client httprequest.Client
}

func (c *client) PublicKey(p *params.PublicKeyRequest) (*params.PublicKeyResponse, error) {
	var r *params.PublicKeyResponse
	err := c.Client.Call(p, &r)
	return r, err
}

func (c *client) QueryUsers(p *params.QueryUsersRequest) ([]string, error) {
	var r []string
	err := c.Client.Call(p, &r)
	return r, err
}

func (c *client) SetUser(p *params.SetUserRequest) error {
	return c.Client.Call(p, nil)
}

func (c *client) SetUserExtraInfo(p *params.SetUserExtraInfoRequest) error {
	return c.Client.Call(p, nil)
}

func (c *client) SetUserExtraInfoItem(p *params.SetUserExtraInfoItemRequest) error {
	return c.Client.Call(p, nil)
}

func (c *client) User(p *params.UserRequest) (*params.User, error) {
	var r *params.User
	err := c.Client.Call(p, &r)
	return r, err
}

func (c *client) UserExtraInfo(p *params.UserExtraInfoRequest) (map[string]interface{}, error) {
	var r map[string]interface{}
	err := c.Client.Call(p, &r)
	return r, err
}

func (c *client) UserExtraInfoItem(p *params.UserExtraInfoItemRequest) (interface{}, error) {
	var r interface{}
	err := c.Client.Call(p, &r)
	return r, err
}

func (c *client) UserGroups(p *params.UserGroupsRequest) ([]string, error) {
	var r []string
	err := c.Client.Call(p, &r)
	return r, err
}

func (c *client) UserIDPGroups(p *params.UserIDPGroupsRequest) ([]string, error) {
	var r []string
	err := c.Client.Call(p, &r)
	return r, err
}

func (c *client) UserToken(p *params.UserTokenRequest) (*macaroon.Macaroon, error) {
	var r *macaroon.Macaroon
	err := c.Client.Call(p, &r)
	return r, err
}

func (c *client) VerifyToken(p *params.VerifyTokenRequest) (map[string]string, error) {
	var r map[string]string
	err := c.Client.Call(p, &r)
	return r, err
}
