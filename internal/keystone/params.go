// Copyright 2015 Canonical Ltd.

// Package keystone implements a keystone client.
package keystone

import (
	"time"

	"github.com/juju/httprequest"
)

// TokensRequest is the request sent to /v2.0/tokens to perform a login.
// See
// http://developer.openstack.org/api-ref-identity-v2.html#authenticate-v2.0
// for more information.
type TokensRequest struct {
	httprequest.Route `httprequest:"POST /v2.0/tokens"`
	Body              TokensBody `httprequest:",body"`
}

// TokensBody represents the JSON body sent in a login request.
type TokensBody struct {
	Auth Auth `json:"auth"`
}

// TokensResponse is the response from /v2.0/tokens on success.
type TokensResponse struct {
	Access Access `json:"access"`
}

// Auth is the authentication information sent in a login request.
type Auth struct {
	TenantName          string               `json:"tenantName,omitempty"`
	TenantID            string               `json:"tenantId,omitempty"`
	PasswordCredentials *PasswordCredentials `json:"passwordCredentials,omitempty"`
	Token               *Token               `json:"token,omitempty"`
}

// PasswordCredentials holds the credentials for a username/password
// authentication.
type PasswordCredentials struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

// Token contains the details of a token generated by keystone.
type Token struct {
	ID       string  `json:"id,omitempty"`
	IssuedAt *Time   `json:"issued_at,omitempty"`
	Expires  *Time   `json:"expires,omitempty"`
	Tenant   *Tenant `json:"tenant,omitempty"`
}

// Tenant contains details of a tenant in the openstack environment.
type Tenant struct {
	ID          string `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
	Enabled     bool   `json:"enabled"`
}

// Access contains the access granted in the login attempt.
type Access struct {
	Token Token `json:"token"`
	User  User  `json:"user"`
}

// User contains details of a user in the openstack environment.
type User struct {
	ID       string `json:"id,omitempty"`
	Name     string `json:"name,omitempty"`
	Username string `json:"username,omitemtpy"`
}

// TenantsRequest is the request sent to /v2.0/tenants to list tenants a
// token has access to. See
// http://developer.openstack.org/api-ref-identity-v2.html#listTenants
// for more information.
type TenantsRequest struct {
	httprequest.Route `httprequest:"GET /v2.0/tenants"`
	AuthToken         string `httprequest:"X-Auth-Token,header"`
}

// TenantsResponse is the list of tenants a token has access to.
type TenantsResponse struct {
	Tenants []Tenant `json:"tenants"`
}

// Time is a time.Time that provides a custom UnmarshalJSON method.
type Time struct {
	time.Time
}

func (t *Time) UnmarshalJSON(data []byte) error {
	if err := t.Time.UnmarshalJSON(data); err == nil {
		return nil
	}
	var err error
	t.Time, err = time.Parse(`"2006-01-02T15:04:05"`, string(data))
	return err
}
